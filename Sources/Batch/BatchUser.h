//
//  BatchUser.h
//  Batch
//
//  https://batch.com
//  Copyright (c) Batch SDK. All rights reserved.
//

#import <Batch/BatchEventAttributes.h>
#import <Batch/BatchProfile.h>
#import <Foundation/Foundation.h>

@class BatchUserDataEditor, BatchUserAttribute;

/// Notification sent by Batch when the event tracker has finished sending notifications to the server.
///
/// Multiple events of this kind can occur in a short period of time.
/// - Note: If Batch isn't started or if it is opted-out from, this notification will __NOT__ be emitted.
FOUNDATION_EXPORT NSString *_Nonnull const BatchEventTrackerFinishedNotification;

/// Key of `BatchEventTrackerFinishedNotification's userInfo`, indicating whether the event tracker has successfully
/// sent events to the server or not.
FOUNDATION_EXPORT NSString *_Nonnull const BatchEventTrackerFinishedWithSuccessKey;

/// Batch's User Module
@interface BatchUser : NSObject

/// Get the unique installation ID, generated by Batch.
///
/// - Returns: Batch-generated installation ID. Might be nil if Batch isn't started.
@property (class, nullable, readonly) NSString *installationID;

/// Get the user language
///
/// - Returns: The custom language set with ``BatchProfile.editor``, or nil if none was set.
+ (nonnull NSString *)language;

/// Get the user region
///
/// - Returns: The region set with ``BatchProfile.editor``, or nil if none was set.
+ (nonnull NSString *)region;

/// Get the custom user identifier
///
/// - Returns: The custom identifier set with ``BatchProfile.editor``, or nil if none was set.
+ (nullable NSString *)identifier;

/// Read the saved attributes. Reading is asynchronous so as not to interfere with saving operations.
///
/// - Parameter completionHandler: Completion block that contains a dictionary of attributes.
/// The keys are the ones used when setting the attributes, the values are of type BatchUserAttribute.
/// See ``BatchUserAttribute`` for more information.
+ (void)fetchAttributes:
    (void (^_Nonnull)(NSDictionary<NSString *, BatchUserAttribute *> *_Nullable attributes))completionHandler;

/// Read the saved tag collections.
///
/// Reading is asynchronous so as not to interfere with saving operations.
/// - Note:Tags are saved in lowercase.
/// - Parameter completionHandler: Completion block that contains a dictionary of sets of tags.
/// The keys are the ones used when  setting the tags collections.
+ (void)fetchTagCollections:
    (void (^_Nonnull)(NSDictionary<NSString *, NSSet<NSString *> *> *_Nullable collections))completionHandler;

/// Clear all tags and attributes set on an installation and their local cache returned by fetchAttributes and
/// fetchTagCollections. This doesn't affect data set on profiles using BatchProfile.
+ (void)clearInstallationData;

@end
